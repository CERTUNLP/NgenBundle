# This file is part of the Ngen - CSIRT Incident Report System.
#
# (c) CERT UNLP <support@cert_unlp.unlp.edu.ar>
#
# This source file is subject to the GPL v3.0 license that is bundled
# with this source code in the file LICENSE.
services:
    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            $ngen_lang: '%ngen_lang%'
            $ngen_team: '%cert_unlp.ngen.team%'
            $environment: '%kernel.environment%'
            $ngen_team_mail: '%cert_unlp.ngen.team.mail%'
            $ngen_team_name: '%cert_unlp.ngen.team.name%'
            $evidence_path: "%cert_unlp.ngen.incident.evidence.path%"
            $grafana_internal_url: "%cert_unlp.ngen.grafana.internal.url%"
            $grafana_external_url: "%cert_unlp.ngen.grafana.external.url%"
            $elastica_finder_incident: "@fos_elastica.finder.incidents.incident"
            $elastica_finder_decision: "@fos_elastica.finder.decisions.decision"
            $elastica_finder_feed: "@fos_elastica.finder.feeds.feed"
            $elastica_finder_playbook: "@fos_elastica.finder.playbooks.playbook"
            $elastica_finder_host: "@fos_elastica.finder.hosts.host"
            $elastica_finder_network_admin: "@fos_elastica.finder.network_admins.network_admin"
            $elastica_finder_network_entity: "@fos_elastica.finder.network_entities.network_entity"
            $elastica_finder_network: "@fos_elastica.finder.networks.network"
            $elastica_finder_user: "@fos_elastica.finder.users.user"
            $elastica_finder_type: "@fos_elastica.finder.types.type"
            #            $elastica_finder_incident_state_action: "@fos_elastica.finder.state_changes.incidentStateAction"
            $elastica_finder_priority: "@fos_elastica.finder.priorities.priority"
            $elastica_finder_state: "@fos_elastica.finder.states.state"
            $elastica_finder_taxonomy_predicate: "@fos_elastica.finder.taxonomy_predicate.predicate"
            $elastica_finder_taxonomy_value: "@fos_elastica.finder.taxonomy_value.value"
            $elastica_finder_report: "@fos_elastica.finder.reports.report"


    CertUnlp\NgenBundle\:
        resource: '../../../NgenBundle/*'
        exclude: '../../../NgenBundle/{Entity,Tests,Utils,Docker,DoctrineMigrations}'
    CertUnlp\NgenBundle\Controller\:
        resource: '../../../NgenBundle/Controller'
        public: true
        tags: [ 'controller.service_arguments' ]
    CertUnlp\NgenBundle\Service\Listener\Entity\:
        resource: '../../../NgenBundle/Service/Listener/Entity/*'
        tags:
            - { name: doctrine.orm.entity_listener }

    CertUnlp\NgenBundle\Controller\Frontend\User\UserResettingFrontendController:
        arguments:
            $eventDispatcher: '@event_dispatcher'
            $formFactory: '@fos_user.registration.form.factory'
            $userManager: '@fos_user.user_manager'
            $mailer: '@fos_user.mailer'
            $retryTtl: '%fos_user.resetting.retry_ttl%'
    CertUnlp\NgenBundle\Form\Incident\IncidentCommentType:
        arguments:
            $commentClass: '%fos_comment.model.comment.class%'

    Gedmo\Translatable\TranslatableListener:
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]
            - [ setDefaultLocale, [ "%ngen_lang%" ] ]
            - [ setTranslationFallback, [ true ] ]
    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]
    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]
    Gedmo\Blameable\BlameableListener:
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    CertUnlp\NgenBundle\Command\Communication\MessageEmailCommand:
        arguments:
            $mailer: "@swiftmailer.mailer.cert_unlp.ngen.incident.mailer"

    CertUnlp\NgenBundle\Service\Communications\IncidentCommunicationMailer:
        tags:
            - { name: kernel.event_listener, event: fos_comment.comment.pre_persist, method: onCommentPrePersist, priority: -1 }
            - { name: cert_unlp.ngen.incident.delegate, priority: 2 }

    CertUnlp\NgenBundle\Service\Communications\IncidentCommunicationTelegram:
        tags:
            - { name: kernel.event_listener, event: fos_comment.comment.pre_persist, method: onCommentPrePersist, priority: -1 }
            - { name: cert_unlp.ngen.incident.delegate, priority: 2 }
